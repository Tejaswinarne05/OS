#include <stdio.h>

#define MAX_FRAMES 10
#define MAX_PAGES 20

int findLRU(int time[], int numFrames) {
    int i, minTime = time[0], minIndex = 0;
    for (i = 1; i < numFrames; i++) {
        if (time[i] < minTime) {
            minTime = time[i];
            minIndex = i;
        }
    }
    return minIndex;
}

int LRU(int pages[], int numPages, int numFrames) {
    int frames[MAX_FRAMES] = {-1}; 
    int time[MAX_FRAMES] = {0};    
    int pageFaults = 0;
    int i, j, pageFound;

    for (i = 0; i < numPages; i++) {
        pageFound = 0;
        for (j = 0; j < numFrames; j++) {
            if (frames[j] == pages[i]) {
                pageFound = 1;
                time[j] = i;
                break;
            }
        }
        
        if (!pageFound) {
            pageFaults++;

            for (j = 0; j < numFrames; j++) {
                if (frames[j] == -1) {
                    frames[j] = pages[i];
                    time[j] = i; 
                    break;
                }
            }
            if (j == numFrames) {
                int replaceIndex = findLRU(time, numFrames);
                frames[replaceIndex] = pages[i];
                time[replaceIndex] = i;
            }
        }
    }
    return pageFaults;
}

int main() {
    int pages[] = {7, 0, 1, 2, 0, 3, 0, 4, 2, 3, 0, 3, 3}; 
    int numPages = sizeof(pages) / sizeof(pages[0]);
    int numFrames;

    printf("Enter number of frames: ");
    scanf("%d", &numFrames);

    if (numFrames > MAX_FRAMES) {
        printf("Number of frames exceeds the maximum allowed frames\n");
        return -1;
    }

    int pageFaults = LRU(pages, numPages, numFrames);

    printf("Total number of page faults: %d\n", pageFaults);

    return 0;
}
