#include <stdio.h>

void firstFit(int blockSizes[], int blockCount, int processSizes[], int processCount) {
    int allocation[processCount];

    // Initialize all allocations to -1 (not allocated)
    for (int i = 0; i < processCount; i++) {
        allocation[i] = -1;
    }

    // Allocate each process
    for (int i = 0; i < processCount; i++) {
        for (int j = 0; j < blockCount; j++) {
            if (blockSizes[j] >= processSizes[i]) {
                allocation[i] = j; // Allocate block j to process i
                blockSizes[j] -= processSizes[i]; // Reduce block size
                break; // Move to the next process
            }
        }
    }

    // Print the allocation results
    printf("\nProcess\tSize\tBlock\n");
    for (int i = 0; i < processCount; i++) {
        if (allocation[i] != -1) {
            printf("P%d\t%d\tB%d\n", i + 1, processSizes[i], allocation[i] + 1);
        } else {
            printf("P%d\t%d\tNot Allocated\n", i + 1, processSizes[i]);
        }
    }
}

int main() {
    int blockSizes[] = {100, 500, 200, 300, 600};
    int processSizes[] = {212, 417, 112, 426};
    int blockCount = 5, processCount = 4;

    // Call the first fit function
    firstFit(blockSizes, blockCount, processSizes, processCount);

    return 0;
}
